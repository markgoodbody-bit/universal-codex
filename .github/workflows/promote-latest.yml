name: Promote latest Codex
on:
  release:
    types: [published]
permissions:
  contents: write
env:
  GH_TOKEN: ${{ github.token }}

jobs:
  promote:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.repository.default_branch }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name  "github-actions"
          git config user.email "github-actions@users.noreply.github.com"

      - name: Promote and archive
        shell: bash
        run: |
          set -euo pipefail
          NEW_TAG="${{ github.event.release.tag_name }}"
          NEW_VER="${NEW_TAG#v}"

          PREV_VER=""
          [[ -f codex/latest/VERSION ]] && PREV_VER="$(cat codex/latest/VERSION || true)"
          [[ -n "${PREV_VER}" ]] && git mv codex/latest "codex/archive/v${PREV_VER}" || true

          rm -rf codex/latest
          mkdir -p codex/latest
          cp -a "codex/${NEW_VER}/." codex/latest/
          echo "${NEW_VER}" > codex/latest/VERSION

          git add -A
          git diff --cached --quiet || git commit -m "Promote v${NEW_VER} â†’ codex/latest; archive prior v${PREV_VER}"
          git push origin "${{ github.event.repository.default_branch }}"

      - name: Update root README to latest
        shell: bash
        run: |
          set -euo pipefail
          cp codex/latest/README_Codex_v*.md README.md
          git add README.md
          git diff --cached --quiet || git commit -m "README: sync to latest"
          git push origin "${{ github.event.repository.default_branch }}"

      - name: Ensure zip tool
        run: sudo apt-get update && sudo apt-get install -y zip

      - name: Build stable zip from codex/latest
        run: (cd codex/latest && zip -r ../../UniversalCodex_latest.zip .)

      - name: Upload stable asset to this release
        run: gh release upload "${{ github.event.release.tag_name }}" UniversalCodex_latest.zip --clobber
