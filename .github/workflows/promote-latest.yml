name: Promote latest Codex
on:
  release:
    types: [published]
permissions:
  contents: write

jobs:
  promote:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.repository.default_branch }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name  github-actions
          git config user.email github-actions@users.noreply.github.com

      - name: Promote folder and sync README
        shell: bash
        run: |
          set -euo pipefail
          TAG="${{ github.event.release.tag_name }}"
          VER="${TAG#v}"

          # fail fast if the version dir isn't in the repo yet
          [[ -d "codex/${VER}" ]] || { echo "codex/${VER} not found in repo"; exit 1; }

          PREV=""
          [[ -f codex/latest/VERSION ]] && PREV="$(cat codex/latest/VERSION || true)"

          [[ -n "${PREV}" ]] && git mv -f codex/latest "codex/archive/v${PREV}" || true
          rm -rf codex/latest && mkdir -p codex/latest
          rsync -a "codex/${VER}/" codex/latest/
          echo "${VER}" > codex/latest/VERSION

          # sync root README to the latest versioned README if present
          if [[ -f "codex/latest/README_Codex_v${VER}.md" ]]; then
            cp "codex/latest/README_Codex_v${VER}.md" README.md
          fi

          git add -A
          if ! git diff --cached --quiet; then
            git commit -m "Promote v${VER} â†’ codex/latest; archive v${PREV}; sync README"
            git push origin "${{ github.event.repository.default_branch }}"
          else
            echo "No changes to commit."
          fi

      - name: Build and attach UniversalCodex_latest.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd codex/latest
          zip -r ../../UniversalCodex_latest.zip .
          cd ../..
          gh release upload "${{ github.event.release.tag_name }}" UniversalCodex_latest.zip --clobber
